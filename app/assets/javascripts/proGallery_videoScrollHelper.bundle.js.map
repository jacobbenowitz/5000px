{"version":3,"file":"proGallery_videoScrollHelper.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAuC;AACoC;AACc;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oIAAc,IAAI;AACrE;AACA,2BAA2B;AAC3B,4CAA4C,2BAA2B,iCAAiC,IAAI;AAC5G;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4BAA4B,4EAAqC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oFAA2C;AAC5D;AACA;AACA;AACA,iBAAiB,wEAA+B;AAChD;AACA;AACA;AACA,iBAAiB,0EAAiC;AAClD;AACA;AACA;AACA,iBAAiB,2EAAkC;AACnD;AACA;AACA;AACA,iBAAiB,0EAAiC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gCAAgC;AAC7E;AACA;AACA,mDAAmD,gCAAgC;AACnF,sEAAsE,8CAA8C;AACpH;AACA,6CAA6C,gCAAgC;AAC7E;AACA;AACA;AACA,4EAA4E,0BAA0B;AACtG;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sBAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,2DAA2D,8CAA8C;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,sBAAsB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wEAAyB;AACzD;AACA;AACA;AACA;AACA,0BAA0B,uDAAM,IAAI,mEAAkB;AACtD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kCAAkC,0EAA2B;AAC7D;AACA;AACA;AACA,mDAAmD,uDAAM,IAAI,kEAAiB;AAC9E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,0BAA0B;AAChF;AACA;AACA,CAAC;AACD,iEAAe,iBAAiB,EAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://my5000px/./node_modules/pro-gallery/dist/esm/components/helpers/videoScrollHelper.js"],"sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport { GALLERY_CONSTS, dimensionsHelper, window } from 'pro-gallery-lib';\nimport { isWithinPaddingVertically, isWithinPaddingHorizontally, } from './scrollHelper';\nvar VIDEO_EVENTS = {\n    SCROLL: 'SCROLL',\n    CLICKED: 'CLICKED',\n    HOVERED: 'HOVERED',\n    ENDED: 'ENDED',\n    INIT_SCROLL: 'INIT_SCROLL',\n};\nvar VideoScrollHelper = /** @class */ (function () {\n    function VideoScrollHelper(config) {\n        var _this = this;\n        this.scrollBase = 0;\n        this.videoItems = [];\n        this.currentPlayingIdx = -1;\n        this.currentItemCount = 0;\n        this.playing = false;\n        this.updateGalleryStructure = this.updateGalleryStructure.bind(this);\n        this.initializePlayState = this.initializePlayState.bind(this);\n        this.onScroll = this.onScroll.bind(this);\n        this.handleEvent = this.handleEvent.bind(this);\n        this.play = this.play.bind(this);\n        this.stop = this.stop.bind(this);\n        this.isVisible = this.isVisible.bind(this);\n        this.videoPlay = undefined;\n        this.itemClick = undefined;\n        this.setPlayingVideos = config.setPlayingVideos;\n        this.lastVideoPlayed = -1;\n        this.videoRatingMap = new Map();\n        this.trigger = Object.assign.apply(Object, __spreadArrays([{}], Object.keys(VIDEO_EVENTS).map(function (key) {\n            var _a;\n            return (_a = {},\n                _a[key] = function (args) { return _this.handleEvent({ eventName: key, eventData: args }); },\n                _a);\n        })));\n    }\n    //--------------------------updates----------------------------------//\n    VideoScrollHelper.prototype.updateGalleryStructure = function (_a) {\n        var _this = this;\n        var galleryStructure = _a.galleryStructure, scrollBase = _a.scrollBase, videoPlay = _a.videoPlay, videoLoop = _a.videoLoop, itemClick = _a.itemClick, oneRow = _a.oneRow;\n        this.galleryWidth = dimensionsHelper.getGalleryDimensions().galleryWidth;\n        this.scrollBase = scrollBase;\n        this.videoPlay = videoPlay;\n        this.videoLoop = videoLoop;\n        this.itemClick = itemClick;\n        this.oneRow = oneRow;\n        this.currentItemCount = galleryStructure.galleryItems.length;\n        this.videoItems = [];\n        galleryStructure.galleryItems.forEach(function (item) {\n            if (item.type === 'video' ||\n                (item.type === 'image' &&\n                    (item.id.includes('_placeholder') || item.isVideoPlaceholder))) {\n                // either video or a placeholder for video files (both need to be included in the list)\n                if (!_this.videoRatingMap.has(item.id)) {\n                    _this.videoRatingMap.set(item.id, item.idx);\n                }\n                _this.videoItems.push(item);\n            }\n        });\n    };\n    //--------------------------triggers--------------------------------//\n    VideoScrollHelper.prototype.handleEvent = function (_a) {\n        var eventName = _a.eventName, eventData = _a.eventData;\n        switch (eventName) {\n            case VIDEO_EVENTS.SCROLL:\n                this.onScroll(eventData);\n                break;\n            case GALLERY_CONSTS.events.ITEM_ACTION_TRIGGERED:\n                //case VIDEO_EVENTS.clicked:\n                this.itemClicked(eventData.idx);\n                break;\n            case GALLERY_CONSTS.events.HOVER_SET:\n                //case VIDEO_EVENTS.hovered:\n                this.itemHovered(eventData);\n                break;\n            case GALLERY_CONSTS.events.VIDEO_ENDED:\n                //case VIDEO_EVENTS.ended:\n                this.videoEnded(eventData.idx);\n                break;\n            case GALLERY_CONSTS.events.VIDEO_PLAYED:\n                //case VIDEO_EVENTS.ended:\n                this.videoPlayed(eventData.idx);\n                break;\n            case GALLERY_CONSTS.events.VIDEO_ERROR:\n                //case VIDEO_EVENTS.ended:\n                this.videoErrorReported();\n                break;\n            case VIDEO_EVENTS.INIT_SCROLL:\n                break;\n            default:\n        }\n    };\n    VideoScrollHelper.prototype.itemHovered = function (idx) {\n        if (this.videoPlay !== 'hover')\n            return;\n        if (this.IdxExistsInVideoItems(idx)) {\n            this.play(idx);\n        }\n        else {\n            //do nothing\n        }\n    };\n    VideoScrollHelper.prototype.itemClicked = function (idx) {\n        if (this.videoPlay !== 'onClick')\n            return;\n        // if (this.itemClick !== 'nothing') return;\n        if (this.IdxExistsInVideoItems(idx)) {\n            if (this.currentPlayingIdx === idx) {\n                this.stop();\n            }\n            else {\n                this.play(idx);\n            }\n        }\n        else {\n            //do nothing\n        }\n    };\n    VideoScrollHelper.prototype.onScroll = function (_a) {\n        var _this = this;\n        var top = _a.top, left = _a.left;\n        this.top = top >= 0 ? top : this.top;\n        this.left = left >= 0 ? left : this.left;\n        if (this.currentPlayingIdx === -1) {\n            this.autoPlayNextVideoByRating({ top: this.top, left: this.left });\n        }\n        else {\n            if (!this.isCurrentVideoStillVisible({ top: this.top, left: this.left })) {\n                this.stop(this.videoItems.findIndex(function (item) { return item.idx === _this.currentPlayingIdx; }));\n            }\n            this.autoPlayNextVideoByRating({ top: this.top, left: this.left });\n        }\n    };\n    VideoScrollHelper.prototype.videoEnded = function (idx) {\n        var indexInVideoItems = this.videoItems.findIndex(function (item) { return item.idx === idx; });\n        this.stop(indexInVideoItems);\n        var scroll = { top: this.top, left: this.left };\n        this.autoPlayNextVideoByRating(scroll);\n    };\n    VideoScrollHelper.prototype.videoPlayed = function (idx) {\n        this.lastVideoPlayed = idx;\n    };\n    VideoScrollHelper.prototype.videoErrorReported = function () {\n        this.stop();\n    };\n    VideoScrollHelper.prototype.initializePlayState = function () {\n        this.autoPlayNextVideoByRating({ top: this.top, left: this.left });\n    };\n    //-------------------------------controls------------------------------------//\n    VideoScrollHelper.prototype.autoPlayNextVideoByRating = function (_a) {\n        var _this = this;\n        var top = _a.top, left = _a.left;\n        if (!this.shouldAutoPlay()) {\n            return;\n        }\n        var secondBestRating = {\n            idx: -1,\n            rating: Infinity,\n        };\n        var bestRating = {\n            idx: -1,\n            rating: Infinity,\n        };\n        this.videoItems.some(function (item) {\n            if (_this.isVisible(item, { top: top, left: left })) {\n                var itemRating = _this.videoRatingMap.get(item.id);\n                if (itemRating <= bestRating.rating) {\n                    secondBestRating.idx = bestRating.idx;\n                    secondBestRating.rating = bestRating.rating;\n                    bestRating.idx = item.idx;\n                    bestRating.rating = itemRating;\n                }\n                else if (itemRating <= secondBestRating.rating) {\n                    secondBestRating.idx = item.idx;\n                    secondBestRating.rating = itemRating;\n                }\n                return false;\n            }\n            else {\n                if (bestRating.idx >= 0) {\n                    return true;\n                }\n                return false;\n            }\n        });\n        if (bestRating.idx >= 0) {\n            if (!this.allowedLoop() && bestRating.idx === this.lastVideoPlayed) {\n                if (secondBestRating.idx >= 0) {\n                    this.play(secondBestRating.idx); //play 2nd in line instead. keep best rating for next by the score he got...\n                }\n                else {\n                    return; //cant play same video twice.\n                }\n            }\n            else {\n                this.play(bestRating.idx);\n            }\n        }\n        else {\n            this.lastVideoPlayed = -2; //if there are no videos to play. we can reset this mechanism so that one-video galleries can keep playing the same video\n        }\n    };\n    VideoScrollHelper.prototype.calculateCurrentItemPlacement = function () {\n        var _this = this;\n        return this.videoItems.findIndex(function (item) { return item.idx === _this.currentPlayingIdx; });\n    };\n    VideoScrollHelper.prototype.play = function (idx) {\n        this.setPlayingIdx(idx);\n        this.playing = true;\n    };\n    VideoScrollHelper.prototype.stop = function (indexInVideoItems) {\n        if (indexInVideoItems >= 0) {\n            var newRating = this.videoRatingMap.get(this.videoItems[indexInVideoItems].id) +\n                this.currentItemCount;\n            this.videoRatingMap.set(this.videoItems[indexInVideoItems].id, newRating);\n        }\n        this.setPlayingIdx(-1);\n        this.playing = false;\n    };\n    VideoScrollHelper.prototype.onPlayingIdxChange = function () {\n        this.setPlayingVideos(this.currentPlayingIdx);\n    };\n    //-------------------------------get/set----------------------------------------//\n    VideoScrollHelper.prototype.setPlayingIdx = function (idx) {\n        if (this.currentPlayingIdx !== idx) {\n            this.currentPlayingIdx = idx;\n            this.onPlayingIdxChange();\n        }\n    };\n    //-----------------------------Utils--------------------------------------------//\n    VideoScrollHelper.prototype.isCurrentVideoStillVisible = function (_a) {\n        var top = _a.top, left = _a.left;\n        var currentItemPlacement = this.calculateCurrentItemPlacement();\n        return this.isVisible(this.videoItems[currentItemPlacement], { top: top, left: left });\n    };\n    VideoScrollHelper.prototype.isVisible = function (item, _a) {\n        var top = _a.top, left = _a.left;\n        var target = {\n            offsetTop: this.scrollBase || 0,\n            scrollY: top,\n            scrollLeft: left,\n        };\n        var videoPlayVerticalTolerance = (item.offset.top - item.offset.bottom) / 2;\n        var videoPlayHorizontalTolerance = (item.offset.left - item.offset.right) / 2;\n        var visibleVertically = isWithinPaddingVertically({\n            target: target,\n            scrollBase: this.scrollBase,\n            top: item.offset.top,\n            bottom: item.offset.top + item.style.height,\n            screenHeight: window && window.innerHeight,\n            padding: videoPlayVerticalTolerance,\n        });\n        var visibleHorizontally;\n        if (!this.oneRow) {\n            visibleHorizontally = true;\n        }\n        else {\n            visibleHorizontally = isWithinPaddingHorizontally({\n                target: target,\n                left: item.offset.left,\n                right: item.offset.left + item.style.width,\n                screenWidth: this.galleryWidth || (window && window.innerWidth),\n                padding: videoPlayHorizontalTolerance,\n            });\n        }\n        return visibleVertically && visibleHorizontally;\n    };\n    VideoScrollHelper.prototype.shouldAutoPlay = function () {\n        return this.videoPlay === 'auto';\n    };\n    VideoScrollHelper.prototype.allowedLoop = function () {\n        return this.videoLoop === true;\n    };\n    VideoScrollHelper.prototype.IdxExistsInVideoItems = function (idx) {\n        return this.videoItems.some(function (item) { return item.idx === idx; });\n    };\n    return VideoScrollHelper;\n}());\nexport default VideoScrollHelper;\n// this.renderedPaddingMultiply = 2;\n// this.visiblePaddingMultiply = 0;\n// this.videoPlayVerticalTolerance =\n//   (this.props.offset.bottom - this.props.offset.top) / 2;\n// this.videoPlayHorizontalTolerance =\n//   (this.props.offset.right - this.props.offset.left) / 2;\n// this.padding = {\n//   renderedVertical:\n//     utils.parseGetParam('renderedPadding') ||\n//     this.screenSize.height * this.renderedPaddingMultiply,\n//   visibleVertical:\n//     utils.parseGetParam('displayPadding') ||\n//     this.screenSize.height * this.visiblePaddingMultiply,\n//   playVertical:\n//     utils.parseGetParam('playPadding') ||\n//     this.screenSize.height * this.visiblePaddingMultiply -\n//       this.videoPlayVerticalTolerance,\n//   renderedHorizontal:\n//     utils.parseGetParam('renderedPadding') ||\n//     this.screenSize.width * this.renderedPaddingMultiply,\n//   visibleHorizontal:\n//     utils.parseGetParam('displayPadding') ||\n//     this.screenSize.width * this.visiblePaddingMultiply,\n//   playHorizontal:\n//     utils.parseGetParam('playPadding') ||\n//     this.screenSize.width * this.visiblePaddingMultiply -\n//       this.videoPlayHorizontalTolerance,\n// };\n//# sourceMappingURL=videoScrollHelper.js.map"],"names":[],"sourceRoot":""}